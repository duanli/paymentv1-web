<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.payment.admin.mapper.ProviderAccountMapper">
	<resultMap type="cn.com.payment.admin.model.ProviderAccount" id="providerAccountResultMap">
		<id column="ppa_providerAccId" jdbcType="BIGINT" property="providerAccId" />
		<result column="ppa_providerId" jdbcType="BIGINT" property="providerId" />
		<result column="ppa_accName" jdbcType="VARCHAR" property="accName" />
		<result column="ppa_providerMchNo" jdbcType="VARCHAR" property="providerMchNo" />
		<result column="ppa_providerMchKey" jdbcType="VARCHAR" property="providerMchKey" />
		<result column="ppa_providerAPPId" jdbcType="VARCHAR" property="providerAPPId" />
		<result column="ppa_providerRSAKey" jdbcType="VARCHAR" property="providerRSAKey" />
		<result column="ppa_state" jdbcType="VARCHAR" property="state" />
		<result column="ppa_createTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="ppa_updateTime" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="ppa_feeRate" jdbcType="INTEGER" property="feeRate" />
		<result column="ppa_balance" jdbcType="BIGINT" property="balance" />
	</resultMap>
	
	<resultMap id="providerAccountResultMap2" type="cn.com.payment.admin.model.ProviderAccount" extends="providerAccountResultMap">
		<collection column="ppa_providerId" property="provider" select="cn.com.payment.admin.mapper.ProviderMapper.selectOne"/>
	</resultMap>
	
	<insert id="save" parameterType="ProviderAccount" useGeneratedKeys="true" keyProperty="providerAccId">
	  INSERT INTO pay_provider_account
	  (ppa_accName,ppa_providerId,ppa_providerMchNo,ppa_providerMchKey,ppa_providerAPPId,ppa_providerRSAKey,ppa_state,ppa_createTime,ppa_updateTime,ppa_feeRate,ppa_balance)
	  VALUES 
	  (#{accName},#{providerId},#{providerMchNo},#{providerMchKey},#{providerAPPId},#{providerRSAKey},#{state},NOW(),NOW(),#{feeRate},#{balance})
	</insert>

	<insert id="insertBatch" parameterType="ProviderAccount">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO
		pay_provider_account
		(ppa_providerId,ppa_providerMchNo,ppa_providerMchKey,ppa_providerAPPId,ppa_providerRSAKey,ppa_state,ppa_createTime,ppa_updateTime,ppa_feeRate,ppa_balance)
		SELECT *
		FROM (
		<foreach collection="list" item="providerAccount" index="index"
			open="" close="" separator="union all">
			SELECT
					 #{providerId} as ppa_providerId,
					 #{providerMchNo} as ppa_providerMchNo,
					 #{providerMchKey} as ppa_providerMchKey,
					 #{providerAPPId} as ppa_providerAPPId,
					 #{providerRSAKey} as ppa_providerRSAKey,
					 #{state} as ppa_state,
					 #{createTime} as ppa_createTime,
					 #{updateTime} as ppa_updateTime,
					 #{feeRate} as ppa_feeRate,
					 #{balance} as ppa_balance
			FROM DUAL
		</foreach>
		) A
	</insert>

	
	<update id="update" parameterType="ProviderAccount">
		UPDATE pay_provider_account
		<set>
		  <if test="providerAccId !=null and providerAccId >= 0 "> 
			 ppa_providerAccId = #{providerAccId},
	      </if>
		  <if test="providerId !=null and providerId >= 0 "> 
			 ppa_providerId = #{providerId},
	      </if>
	      <if test="accName !=null and accName != '' "> 
			 ppa_accName = #{accName},
	      </if>
		  <if test="providerMchNo !=null and providerMchNo!='' ">
			 ppa_providerMchNo=#{providerMchNo},  
		  </if> 
		  <if test="providerMchKey !=null and providerMchKey!='' ">
			 ppa_providerMchKey=#{providerMchKey},  
		  </if> 
		  <if test="providerAPPId !=null and providerAPPId!='' ">
			 ppa_providerAPPId=#{providerAPPId},  
		  </if> 
		  <if test="providerRSAKey !=null and providerRSAKey!='' ">
			 ppa_providerRSAKey=#{providerRSAKey},  
		  </if> 
		  <if test="state !=null and state!='' ">
			 ppa_state=#{state},  
		  </if> 
		  <if test="feeRate !=null and feeRate!='' ">
			 ppa_feeRate=#{feeRate},  
		  </if> 
		  <if test="balance !=null and balance >= 0 "> 
			 ppa_balance = #{balance},
	      </if>
	      	 ppa_updateTime=NOW()
		</set>
		WHERE ppa_providerAccId = #{providerAccId}
	</update>

	<delete id="deleteByPK">
		DELETE FROM pay_provider_account WHERE ppa_providerAccId = #{providerAccId}
	</delete>


	<delete id="deleteByPKs" parameterType="java.util.ArrayList">
	  DELETE FROM pay_provider_account WHERE ppa_providerAccId IN
		<foreach collection="array" item="providerAccId" open="(" separator="," close=")">
			 #{providerAccId}
		</foreach>
	</delete>
	
	<delete id="delete" parameterType="ProviderAccount"> 
		DELETE FROM pay_provider_account WHERE ppa_providerAccId = #{providerAccId}
	</delete>
	
	<select id="exists" parameterType="java.lang.Long" resultType="boolean">
		select count(*) from pay_provider_account where ppa_providerAccId = #{providerAccId}
	</select>
	
	<select id="selectOne" parameterType="java.lang.Long" resultMap="providerAccountResultMap2">
		select * from pay_provider_account
		where ppa_providerAccId = #{providerAccId}
	</select>
	
	<select id="selectByProviderId" parameterType="java.lang.Long" resultMap="providerAccountResultMap">
		select * from pay_provider_account
		where ppa_providerId=#{providerId}  and ppa_state = '1'
	</select>
	
	<select id="selectAll" resultMap="providerAccountResultMap">
		select * from pay_provider_account
	</select>
	
	<select id="selectByPKs" parameterType="java.util.ArrayList" resultMap="providerAccountResultMap">
		select * from pay_provider_account
		where ppa_providerAccId in
		<foreach collection="array" item="providerAccId" open="(" separator="," close=")">
			 #{providerAccId}
		</foreach>
	</select>
	
	<select id="selectByProperty" parameterType="ProviderAccount" resultMap="providerAccountResultMap2">
	  SELECT * FROM pay_provider_account 
		<where>
		  <if test="providerAccId !=null and providerAccId >= 0 ">
			 ppa_providerAccId=#{providerAccId}  
		  </if> 
		  <if test="providerId !=null and providerId >= 0 ">
			AND ppa_providerId=#{providerId} 
		  </if> 
		  <if test="accName !=null and accName !='' ">
			AND ppa_accName=#{accName} 
		  </if> 
	      <if test="providerMchNo !=null and providerMchNo!='' ">
			AND ppa_providerMchNo=#{providerMchNo}  
		  </if> 
	      <if test="providerMchKey !=null and providerMchKey!='' ">
			AND ppa_providerMchKey=#{providerMchKey}  
		  </if> 
	      <if test="providerAPPId !=null and providerAPPId!='' ">
			AND ppa_providerAPPId=#{providerAPPId}  
		  </if> 
	      <if test="providerRSAKey !=null and providerRSAKey!='' ">
			AND ppa_providerRSAKey=#{providerRSAKey}  
		  </if> 
	      <if test="state !=null and state!='' ">
			AND ppa_state=#{state}  
		  </if> 
	      <if test="createTime !=null and createTime!='' ">
			AND ppa_createTime=#{createTime}  
		  </if> 
	      <if test="updateTime !=null and updateTime!='' ">
			AND ppa_updateTime=#{updateTime}  
		  </if> 
	      <if test="feeRate !=null and feeRate!='' ">
			AND ppa_feeRate=#{feeRate}  
		  </if> 
		  <if test="balance !=null and balance >= 0 ">
			AND ppa_balance=#{balance} 
		  </if> 
		</where>
	</select>
	<select id="selectByPropertyKeyWord" parameterType="ProviderAccount" resultMap="providerAccountResultMap">
	  SELECT * FROM pay_provider_account 
		<where>
		  <if test="providerAccId !=null and providerAccId >= 0 ">
			 ppa_providerAccId=#{providerAccId}  
		  </if> 
		  <if test="providerId !=null and providerId >= 0 ">
			AND ppa_providerId=#{providerId} 
		  </if> 
	      <if test="providerMchNo !=null and providerMchNo!='' ">
			AND ppa_providerMchNo=#{providerMchNo}  
		  </if> 
	      <if test="providerMchKey !=null and providerMchKey!='' ">
			AND ppa_providerMchKey=#{providerMchKey}  
		  </if> 
	      <if test="providerAPPId !=null and providerAPPId!='' ">
			AND ppa_providerAPPId=#{providerAPPId}  
		  </if> 
	      <if test="providerRSAKey !=null and providerRSAKey!='' ">
			AND ppa_providerRSAKey=#{providerRSAKey}  
		  </if> 
	      <if test="state !=null and state!='' ">
			AND ppa_state=#{state}  
		  </if> 
	      <if test="createTime !=null and createTime!='' ">
			AND ppa_createTime=#{createTime}  
		  </if> 
	      <if test="updateTime !=null and updateTime!='' ">
			AND ppa_updateTime=#{updateTime}  
		  </if> 
	      <if test="feeRate !=null and feeRate!='' ">
			AND ppa_feeRate=#{feeRate}  
		  </if> 
		  <if test="balance !=null and balance >= 0 ">
			AND ppa_balance=#{balance} 
		  </if> 
		  <if test="keyWord !=null and keyWord!='' ">
			AND 
				(
		 		ppa_providerMchNo LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
				 or
		 		ppa_providerMchKey LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
				 or
		 		ppa_providerAPPId LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
				 or
		 		ppa_providerRSAKey LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
				 or
		 		ppa_state LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
				 or
			 	)
		  </if> 
		</where>
	</select>
</mapper>